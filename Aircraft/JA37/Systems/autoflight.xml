<?xml version="1.0"?>

<!-- Viggen Autoflight System -->
<!-- Copyright (c) 2020 Josh Davidson (Octal450) -->

<system name="Viggen Autoflight">
	
	<!-- Mode: 0 GSA, 1 STICK, 2 ATT, 3 ALT -->
	
	<channel name="Autoflight: Logic"> <!-- STICK is modelled in control-drivers -->
		
		<pure_gain name="autoflight/indicated-speed-kmh">
			<input>/instrumentation/airspeed-indicator/indicated-speed-kt</input>
			<gain>1.852</gain> <!-- Knots to Kilometers Per Hour -->
		</pure_gain>

		<fcs_function name="autoflight/indicated-speed-kmh-rounded">
			<function>
				<integer>
					<sum>
						<property>autoflight/indicated-speed-kmh</property>
						<value>0.5</value>
					</sum>
				</integer>
			</function>
		</fcs_function>

		<pid name="autoflight/indicated-speed-dot-kmh_sec">
			<input>autoflight/indicated-speed-kmh</input>
			<kd>1</kd>
		</pid>
		
		<actuator name="autoflight/ac-bus-main-bool-timer-6s">
			<description>If no AC for 6 seconds, A/P and A/T are killed</description>
			<input>/ja37/elec/ac-bus-main-bool</input>
			<rate_limit sense="incr">100</rate_limit> <!-- Instant -->
			<rate_limit sense="decr">0.16667</rate_limit> <!-- 6 seconds -->
		</actuator>
		
		<actuator name="autoflight/ac-bus-main-bool-timer-2s">
			<description>If no AC for 2 seconds, A/T alpha mode killed</description>
			<input>/ja37/elec/ac-bus-main-bool</input>
			<rate_limit sense="incr">100</rate_limit> <!-- Instant -->
			<rate_limit sense="decr">0.5</rate_limit> <!-- 2 seconds -->
		</actuator>

		<switch name="autoflight/gear2-bool">
			<default value="0"/>
			<test value="1"> <!-- Should be gear/unit[2]/pos-norm, but Nikolai doesn't use it -->
				gear/gear-pos-norm eq 1
			</test>
		</switch>
		
		<actuator name="autoflight/gear2-timer">
			<input>autoflight/gear2-bool</input>
			<rate_limit sense="incr">0.2</rate_limit> <!-- 5 seconds -->
			<rate_limit sense="decr">100</rate_limit> <!-- Instant -->
		</actuator>
		
		<lag_filter name="autoflight/ss/roll-input">
			<input>fcs/aileron/stick-newtons</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/pitch-input">
			<input>fcs/elevator/stick-newtons</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/yaw-input">
			<input>fcs/rudder/pedal-newtons</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<switch name="autoflight/ss/active">
			<default value="autoflight/ss/active"/>
			<test logic="AND" value="0">
				autoflight/ss/roll-input ge -5
				autoflight/ss/roll-input le 5
				autoflight/ss/pitch-input ge -8
				autoflight/ss/pitch-input le 8
				autoflight/ss/yaw-input ge -12
				autoflight/ss/yaw-input le 12
			</test>
			<test logic="OR" value="1">
				autoflight/ss/roll-input lt -12
				autoflight/ss/roll-input gt 12
				autoflight/ss/pitch-input lt -22
				autoflight/ss/pitch-input gt 22
				autoflight/ss/yaw-input lt -29
				autoflight/ss/yaw-input gt 29
			</test>
		</switch>
		
		<fcs_function name="autoflight/ss/att-delay">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150  0.50
						750  0.35
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/ss/att-reset-time">
			<default value="/sim/time/elapsed-sec"/>
			<test value="autoflight/ss/att-reset-time">
				autoflight/ss/active eq 0
			</test>
		</switch>
		
		<summer name="autoflight/ss/att-reset-time-delay">
			<input>autoflight/ss/att-reset-time</input>
			<input>autoflight/ss/att-delay</input>
		</summer>
		
		<switch name="autoflight/ss/att-active">
			<default value="0"/>
			<test value="1">
				/sim/time/elapsed-sec lt autoflight/ss/att-reset-time-delay
			</test>
		</switch>
		
		<switch name="autoflight/att-ok">
			<default value="0"/>
			<test logic="AND" value="1"> <!-- Less than 66 roll, 60 pitch -->
				attitude/roll-rad ge -1.15192
				attitude/roll-rad le 1.15192
				attitude/pitch-rad ge -1.0472
				attitude/pitch-rad le 1.0472
			</test>
		</switch>
		
		<switch name="autoflight/temp-mode-active">
			<default value="0"/>
			<test logic="AND" value="1"> <!-- Out of range and stick center in ATT or ALT -->
				autoflight/att-ok ne 1
				autoflight/ss/active ne 1
				autoflight/mode gt 1
			</test>
		</switch>
		
		<actuator name="autoflight/temp-mode-timer">
			<input>autoflight/temp-mode-active</input>
			<rate_limit sense="incr">0.2</rate_limit> <!-- 5 seconds -->
			<rate_limit sense="decr">100</rate_limit> <!-- Instant -->
		</actuator>
		
		<switch name="autoflight/alt-transonic">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/mode eq 3
				velocities/mach ge 0.97
				velocities/mach le 1.05
			</test>
		</switch>
		
		<actuator name="autoflight/alt-transonic-timer">
			<input>autoflight/alt-transonic</input>
			<rate_limit sense="incr">0.01666666666666666666666666666667</rate_limit> <!-- 1 minute -->
			<rate_limit sense="decr">100</rate_limit> <!-- Instant -->
		</actuator>
		
		<switch name="autoflight/max-mode">
			<test logic="OR" value="0">
				/ja37/fuses/sa eq 0
				systems/hydraulics/system1/pressure eq 0
				autoflight/ac-bus-main-bool-timer-6s eq 0
				/ja37/elec/dc-bus-main-bool eq 0
				<test logic="AND">
					autoflight/mode eq 1
					position/wow eq 0
					/controls/flight/trim-yaw ne 0
				</test>
			</test>
			<test logic="OR" value="1">
				autoflight/temp-mode-timer eq 1
			</test>
			<test logic="OR" value="2">
				autoflight/alt-transonic-timer eq 1
				<test logic="AND">
					autoflight/pitch/alt-hold-capture eq 1
					autoflight/pitch/alt/error-disengage eq 1
				</test>
			</test>
			<default value="3"/>
			<output>autoflight/max-mode-out</output>
		</switch>
		
		<switch name="autoflight/internal-mode">
			<default value="autoflight/mode"/>
			<test value="1"> <!-- Stay in STICK if in TEMP mode -->
				autoflight/temp-mode-active eq 1
			</test>
			<test logic="AND" value="1"> <!-- Stick out of center so go to STICK -->
				autoflight/ss/active eq 1
				autoflight/mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/manual-roll-rate-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/mode gt 1
				/controls/flight/trim-yaw eq -1
			</test>
			<test logic="AND" value="1">
				autoflight/mode gt 1
				/controls/flight/trim-yaw eq 1
			</test>
		</switch>
		
		<switch name="autoflight/roll-mode">
			<default value="0"/>
			<test logic="OR" value="0"> <!-- No HDG Hold with gears out or using Yaw Trim switches -->
				/gear/gear/position-norm ge 0.01
				autoflight/manual-roll-rate-active eq 1
			</test>
			<test logic="AND" value="1">  <!-- HDG Hold only if less than 7 degrees of roll attitude -->
				attitude/roll-rad ge -0.122173
				attitude/roll-rad le 0.122173
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/athr-mode"> <!-- 0 IAS, 1 Alpha -->
			<default value="0"/>
			<test value="1">
				autoflight/gear2-timer eq 1
			</test>
		</switch>
		
		<!-- Expected disengagement, by anything but pulling the A/T lever to OFF -->
		<switch name="autoflight/athr-disengaged-normal">
			<default value="autoflight/athr-disengaged-normal"/>
			<test value="0">
				autoflight/athr-pos lt 1 <!-- reset by disengaging lever -->
			</test>
			<test logic="OR" value="1">
				gear/unit[2]/WOW eq 1
				autoflight/athr-quick-disengage eq 1
			</test>
		</switch>

		<switch name="autoflight/athr-disengaged-failure">
			<default value="autoflight/athr-disengaged-failure"/>
			<!-- reset by normal disengagement -->
			<test logic="OR" value="0">
				autoflight/athr-pos lt 1
				autoflight/athr-disengaged-normal eq 1
			</test>
			<test logic="OR" value="1">
				<!-- JA only: disengage if speed lt 495km/h and reducing in speed hold mode -->
				<test logic="AND">
					/ja37/systems/variant eq 0
					autoflight/indicated-speed-kmh lt 495
					autoflight/indicated-speed-dot-kmh_sec lt 0
					autoflight/athr-mode eq 0
				</test>
				<!-- 2s loss of AC power, in alpha mode, or with AJS -->
				<test logic="AND">
					autoflight/ac-bus-main-bool-timer-2s eq 0
					<test logic="OR">
						autoflight/athr-mode ne 0
						/ja37/systems/variant ne 0
					</test>
				</test>
				<!-- Other disengagement conditions -->
				autoflight/ac-bus-main-bool-timer-6s eq 0
				/ja37/elec/dc-bus-main-bool eq 0
				/ja37/fuses/sa eq 0
			</test>
		</switch>

		<switch name="autoflight/athr">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/athr-pos eq 1
				autoflight/athr-disengaged-normal eq 0
				autoflight/athr-disengaged-failure eq 0
				fcs/throttle-pos-deg le 70
			</test>
		</switch>

		<switch name="autoflight/high-alpha-can-engage">
			<default value="0"/>
			<test logic="AND" value="1">
				gear/gear-pos-norm eq 1
				<!-- manual says 'airborne', going with this because it matches the A/T disengagement logic -->
				gear/unit[2]/WOW ne 1
			</test>
			<output>autoflight/high-alpha-can-engage-out</output>
		</switch>

		<switch name="autoflight/target-speed-kmh-tie">
			<default value="autoflight/indicated-speed-kmh-rounded"/>
			<test value="550">
				/ja37/systems/variant ne 0
			</test>
			<test logic="AND" value="autoflight/target-speed-kmh">
				autoflight/athr eq 1
				autoflight/athr-mode eq 0
			</test>
			<output>autoflight/target-speed-kmh</output> <!-- So we can override it via keys -->
			<clipto>
				<min>550</min> <!-- Minimum holding speed (manual) -->
				<max>1450</max> <!-- VNE -->
			</clipto>
		</switch>
		
		<switch name="autoflight/stick-light-cmd">
			<default value="0"/>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				<test logic="OR">
					autoflight/mode ge 1
					/controls/lighting/test-indicator-panels eq 1
				</test>
			</test>
		</switch>
		
		<switch name="autoflight/att-blink"> <!-- Light off when 1 -->
			<default value="0"/>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/mode ge 2
				autoflight/temp-mode-active eq 1
				/ja37/blink/four-Hz/state ne 1
			</test>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/mode eq 3
				autoflight/alt-transonic eq 1
				/ja37/blink/four-Hz/state eq 1
			</test>
		</switch>
		
		<switch name="autoflight/att-light-cmd">
			<default value="0"/>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/att-blink ne 1
				<test logic="OR">
					autoflight/mode ge 2
					/controls/lighting/test-indicator-panels eq 1
				</test>
			</test>
		</switch>
		
		<switch name="autoflight/alt-blink"> <!-- Light off when 1 -->
			<default value="0"/>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/mode eq 3
				autoflight/temp-mode-active eq 1
				/ja37/blink/four-Hz/state ne 1
			</test>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/mode eq 3
				autoflight/alt-transonic eq 1
				/ja37/blink/four-Hz/state ne 1
			</test>
		</switch>
		
		<switch name="autoflight/alt-light-cmd">
			<default value="0"/>
			<test logic="AND" value="1">
				/ja37/elec/dc-bus-main-bool eq 1
				autoflight/alt-blink ne 1
				<test logic="OR">
					autoflight/mode ge 3
					/controls/lighting/test-indicator-panels eq 1
				</test>
			</test>
		</switch>
		
	</channel>
	
	<channel name="Autoflight: Drivers">
		
		<fcs_function name="autoflight/roll/max-bank-deg">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						124.190  20
						350.972  60
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/max-bank-deg-trigger">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						124.190  19.99
						350.972  59.99
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<pure_gain name="autoflight/roll/min-bank-deg-trigger">
			<input>autoflight/roll/max-bank-deg-trigger</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<pure_gain name="autoflight/roll/max-bank-rad">
			<input>autoflight/roll/max-bank-deg</input>
			<gain>0.0174533</gain> <!-- DEG to RAD -->
		</pure_gain>
		
		<!-- HDG HOLD -->
		<switch name="autoflight/roll/hdg-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/internal-mode gt 1
				autoflight/roll-mode eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/hdg-hold-target">
			<function>
				<integer>
					<sum>
						<ifthen>
							<eq>
								<property>autoflight/roll/hdg-hold-active</property>
								<value>1</value>
							</eq>
							<property>autoflight/roll/hdg-hold-target</property>
							<property>/orientation/heading-magnetic-deg</property>
						</ifthen>
						<value>0.5</value> <!-- Make the integer rounded correctly -->
					</sum>
				</integer>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/hdg/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/hdg-hold-active</independentVar>
					<tableData>
						     0    1
						200  0.0  1.8
						600  0.0  3.7
						950  0.0  4.1
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/hdg/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/hdg-hold-active</independentVar>
					<tableData>
						     0      1
						250  0.000  0.005
						600  0.000  1.100
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/hdg/trigger">
			<default value="0"/>
			<test logic="OR" value="-1">
				autoflight/roll/hdg-hold-active ne 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/hdg/pi le autoflight/roll/min-bank-deg-trigger
				autoflight/roll/hdg/pi ge autoflight/roll/max-bank-deg-trigger
			</test>
		</switch>
		
		<pid name="autoflight/roll/hdg/pi-v">
			<input>autoflight/roll/hdg/heading-error-deg</input>
			<kp>autoflight/roll/hdg/p-gain</kp>
			<ki>autoflight/roll/hdg/i-gain</ki>
			<kd>0.0</kd>
			<trigger>autoflight/roll/hdg/trigger</trigger>
			<clipto>
				<min>-autoflight/roll/max-bank-deg</min>
				<max>autoflight/roll/max-bank-deg</max>
			</clipto>
			<output>autoflight/roll/hdg/pi</output>
		</pid>
		
		<!-- ALT HOLD -->
		<switch name="autoflight/pitch/alt-hold-pre-target">
			<default value="autoflight/pitch/alt-hold-capture"/>
			<test value="-1200">
				/instrumentation/gps/indicated-vertical-speed le -50
			</test>
			<test value="1200">
				/instrumentation/gps/indicated-vertical-speed ge 50
			</test>
		</switch>
		
		<switch name="autoflight/pitch/alt-hold-active">
			<default value="0"/>
			<test value="1">
				autoflight/internal-mode eq 3
			</test>
		</switch>
		
		<switch name="autoflight/pitch/alt-hold-capture">
			<default value="autoflight/pitch/alt-hold-capture"/>
			<test value="0">
				autoflight/pitch/alt-hold-active eq 0
			</test>
			<test logic="AND" value="1">
				/instrumentation/gps/indicated-vertical-speed le 2200
				/instrumentation/gps/indicated-vertical-speed ge -2200
			</test>
		</switch>
		
		<pure_gain name="autoflight/pitch/alt/vs-clipped">
			<input>/instrumentation/gps/indicated-vertical-speed</input>
			<gain>1.0</gain>
			<clipto> <!-- 750ft maximum deviation -->
				<min>-5250</min>
				<max>5250</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/alt/predicted">
			<function>
				<sum>
					<quotient>
						<property>autoflight/pitch/alt/vs-clipped</property>
						<value>14</value> <!-- ALT gain * -2 -->
					</quotient>
					<property>/instrumentation/altimeter/indicated-altitude-ft</property>
				</sum>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alt/target">
			<function>
				<product>
					<integer>
						<sum>
							<quotient>
								<ifthen>
									<and>
										<eq>
											<property>autoflight/pitch/alt-hold-active</property>
											<value>1</value>
										</eq>
										<eq>
											<property>autoflight/pitch/alt-hold-capture</property>
											<value>1</value>
										</eq>
									</and>
									<property>autoflight/pitch/alt/target</property>
									<property>autoflight/pitch/alt/predicted</property>
								</ifthen>
								<value>10</value>
							</quotient>
							<value>0.5</value> <!-- Make the integer rounded correctly -->
						</sum>
					</integer>
					<value>10</value>
				</product>
			</function>
			<clipto>
				<min>0</min>
				<max>70000</max>
			</clipto>
		</fcs_function>
		
		<summer name="autoflight/pitch/alt/error">
			<input>/instrumentation/altimeter/indicated-altitude-ft</input>
			<input>-autoflight/pitch/alt/target</input>
		</summer>
		
		<pure_gain name="autoflight/pitch/vs/target">
			<input>autoflight/pitch/alt/error</input>
			<gain>-7</gain>
			<clipto>
				<min>-1000</min>
				<max>1000</max>
			</clipto>
		</pure_gain>

		<fcs_function name="autoflight/pitch/alt/error-disengage">
			<function>
				<lt>
					<property>autoflight/pitch/alt/error</property>
					<sum>
						<value>-164</value><!-- -50 m -->
						<product>
							<value>-0.018</value>
							<property>autoflight/pitch/alt/target</property>
						</product>
					</sum>
				</lt>
			</function>
		</fcs_function>

	</channel>
	
	<channel name="Autoflight: Roll Channel">
		
		<switch name="autoflight/roll/att-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/internal-mode gt 1
				autoflight/roll-mode ne 1
				autoflight/manual-roll-rate-active ne 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/att-hold-switch">
			<default value="autoflight/roll/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/roll/att-hold-active ne 1
				autoflight/ss/att-active eq 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/p-rad_sec gt -0.0174533
				velocities/p-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/roll/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/roll/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/roll/roll-hold-target</property>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
			<clipto>
				<min>-autoflight/roll/max-bank-rad</min>
				<max>autoflight/roll/max-bank-rad</max>
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/roll/target-roll-deg">
			<default value="/orientation/roll-deg"/>
			<test logic="AND" value="autoflight/roll/hdg/pi">
				autoflight/roll/hdg-hold-active eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-cmd-target">
			<function>
				<ifthen>
					<eq>
						<property>autoflight/roll/hdg-hold-active</property>
						<value>1</value>
					</eq>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/roll/target-roll-deg</property>
					</toradians>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/roll-rad-input">
			<default value="attitude/roll-rad"/>
			<test value="autoflight/roll/roll-cmd-target">
				autoflight/roll/hdg-hold-active eq 1
			</test>
			<test value="autoflight/roll/roll-hold-target">
				autoflight/internal-mode gt 1
			</test>
			<clipto>
				<min>-autoflight/roll/max-bank-rad</min>
				<max>autoflight/roll/max-bank-rad</max>
			</clipto>
		</switch>
		
		<summer name="autoflight/roll/roll-rad-error">
			<input>attitude/roll-rad</input>
			<input>-autoflight/roll/roll-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/roll/roll-rate-p"> <!-- Calculate optimum roll rate -->
			<input>autoflight/roll/roll-rad-error</input>
			<gain>-2.5</gain>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/roll/p-rad_sec">
			<function>
				<toradians>
					<property>/orientation/roll-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/bank-limit-error"> <!-- Designed so bank greater than limit is ALWAYS negative error -->
			<function>
				<difference>
					<property>autoflight/roll/max-bank-rad</property>
					<abs><property>attitude/roll-rad</property></abs>
				</difference>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/manual-roll-rate-limit">
			<function>
				<table>
					<independentVar lookup="row">autoflight/roll/bank-limit-error</independentVar>
					<tableData>
						0.0000000  0.000000
						0.0872665  0.261799
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/manual-roll-rate-min">
			<default value="-0.261799"/>
			<test value="-autoflight/roll/manual-roll-rate-limit">
				attitude/roll-rad lt 0
			</test>
		</switch>
		
		<switch name="autoflight/roll/manual-roll-rate-max">
			<default value="0.261799"/>
			<test value="autoflight/roll/manual-roll-rate-limit">
				attitude/roll-rad gt 0
			</test>
		</switch>
		
		<pure_gain name="autoflight/roll/manual-roll-rate">
			<description>Makes the Yaw Trim switch generate a Roll Rate demand of 15 degrees per second</description>
			<input>/controls/flight/trim-yaw</input>
			<gain>0.261799</gain>
			<clipto>
				<min>autoflight/roll/manual-roll-rate-min</min>
				<max>autoflight/roll/manual-roll-rate-max</max>
			</clipto>
		</pure_gain>
		
		<summer name="autoflight/roll/roll-rate-error">
			<input>autoflight/roll/p-rad_sec</input>
			<input>-autoflight/roll/roll-rate-p</input>
			<input>-autoflight/roll/manual-roll-rate</input>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</summer>
		
		<fcs_function name="autoflight/roll/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200 -2.5
						320 -1.0
						600 -0.4
						750 -0.2
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200 -4.0
						320 -1.8
						600 -0.6
						750 -0.1
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200 -0.300
						320 -0.070
						600 -0.010
						750 -0.005
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/p-gain-switched">
			<default value="0"/>
			<test value="autoflight/roll/p-gain">
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/i-gain-switched"> 
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/i-gain">
				autoflight/internal-mode gt 1
				autoflight/ss/att-active ne 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/d-gain-switched">
			<default value="0"/>
			<test value="autoflight/roll/d-gain">
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/trigger">
			<default value="0"/>
			<test logic="OR" value="-1">
				autoflight/internal-mode le 1
				autoflight/ss/att-active eq 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/master-pid le -0.999
				autoflight/roll/master-pid ge 0.999
			</test>
		</switch>
		
		<pid name="autoflight/roll/master-pid-v">
			<input>autoflight/roll/roll-rate-error</input>
			<kp>autoflight/roll/p-gain-switched</kp>
			<ki>autoflight/roll/i-gain-switched</ki>
			<kd>autoflight/roll/d-gain-switched</kd>
			<trigger>autoflight/roll/trigger</trigger>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
			<output>autoflight/roll/master-pid</output>
		</pid>
		
		<switch name="autoflight/roll/roll-command">
			<default value="0"/>
			<test value="autoflight/roll/master-pid">
				autoflight/internal-mode gt 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="Pitch Axis">
		
		<switch name="autoflight/pitch/att-hold-active">
			<default value="0"/>
			<test value="1">
				autoflight/internal-mode eq 2
			</test>
		</switch>
		
		<switch name="autoflight/pitch/att-hold-switch">
			<default value="autoflight/pitch/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/pitch/att-hold-active ne 1
				autoflight/ss/att-active eq 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/q-rad_sec gt -0.0174533
				velocities/q-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/pitch/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/pitch/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/pitch/pitch-hold-target</property>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
			<clipto>
				<min>-60</min>
				<max>60</max>
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/pitch/target-pitch-deg">
			<default value="/orientation/pitch-deg"/>
			<test logic="AND" value="autoflight/pitch/vs/pid">
				autoflight/pitch/alt-hold-active eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-cmd-target">
			<function>
				<ifthen>
					<eq>
						<property>autoflight/pitch/alt-hold-active</property>
						<value>1</value>
					</eq>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/pitch/target-pitch-deg</property>
					</toradians>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/pitch-rad-input">
			<default value="attitude/pitch-rad"/>
			<test value="autoflight/pitch/pitch-cmd-target">
				autoflight/pitch/alt-hold-active eq 1
			</test>
			<test value="autoflight/pitch/pitch-hold-target">
				autoflight/internal-mode gt 1
			</test>
			<clipto>
				<min>-60</min>
				<max>60</max>
			</clipto>
		</switch>
		
		<summer name="autoflight/pitch/pitch-rad-error">
			<input>attitude/pitch-rad</input>
			<input>-autoflight/pitch/pitch-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/pitch/pitch-rate-p"> <!-- Calculate optimum pitch rate -->
			<input>autoflight/pitch/pitch-rad-error</input>
			<gain>-1.5</gain>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/thetadot-rad_sec">
			<function>
				<toradians>
					<property>/orientation/pitch-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="autoflight/pitch/pitch-rate-error">
			<input>autoflight/pitch/thetadot-rad_sec</input>
			<input>-autoflight/pitch/pitch-rate-p</input>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</summer>
		
		<fcs_function name="autoflight/pitch/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200  4.0
						320  2.0
						600  0.8
						750  0.6
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200  12.0
						320   9.0
						600   7.0
						750   5.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200  0.30
						320  0.10
						600  0.02
						750  0.01
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/p-gain-switched">
			<default value="0"/>
			<test value="autoflight/pitch/p-gain">
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/i-gain-switched"> 
			<default value="0"/>
			<test logic="AND" value="autoflight/pitch/i-gain">
				autoflight/internal-mode gt 1
				autoflight/ss/att-active ne 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/d-gain-switched">
			<default value="0"/>
			<test value="autoflight/pitch/d-gain">
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/trigger">
			<default value="0"/>
			<test logic="OR" value="-1">
				autoflight/internal-mode le 1
				autoflight/ss/att-active eq 1
			</test>
			<test logic="OR" value="1">
				autoflight/pitch/master-pid le -0.999
				autoflight/pitch/master-pid ge 0.726272
			</test>
		</switch>
		
		<pid name="autoflight/pitch/master-pid-v">
			<input>autoflight/pitch/pitch-rate-error</input>
			<kp>autoflight/pitch/p-gain-switched</kp>
			<ki>autoflight/pitch/i-gain-switched</ki>
			<kd>autoflight/pitch/d-gain-switched</kd>
			<trigger>autoflight/pitch/trigger</trigger>
			<clipto>
				<min>-1.0</min>
				<max>0.727272</max>
			</clipto>
			<output>autoflight/pitch/master-pid</output>
		</pid>
		
		<switch name="autoflight/pitch/pitch-command">
			<default value="0"/>
			<test value="autoflight/pitch/master-pid">
				autoflight/internal-mode gt 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/autotrim-switch">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/internal-mode gt 1
				autoflight/pitch/pitch-command ge 0.001
				/controls/flight/elevator-trim le 1.0
			</test>
			<test logic="AND" value="2">
				autoflight/internal-mode gt 1
				autoflight/pitch/pitch-command le -0.001
				/controls/flight/elevator-trim ge -1.0
			</test>
		</switch>
		
		<!-- Overridable Auto Pitch Trim -->
		<fcs_function name="autoflight/pitch/autotrim-offset">
			<function>
				<sum>
					<ifthen>
						<eq>
							<property>autoflight/pitch/autotrim-switch</property>
							<value>1</value>
						</eq>
						<value>0.00005</value>
						<value>0.0</value>
					</ifthen>
					<ifthen>
						<eq>
							<property>autoflight/pitch/autotrim-switch</property>
							<value>2</value>
						</eq>
						<value>-0.00005</value>
						<value>0.0</value>
					</ifthen>
				</sum>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/elevator-trim">
			<function>
				<sum>
					<property>/controls/flight/elevator-trim</property>
					<property>autoflight/pitch/autotrim-offset</property>
				</sum>
			</function>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
			<output>/controls/flight/elevator-trim</output>
		</fcs_function>
	
	</channel>

</system>
